{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authentication APIs",
    "description": "API for managing authentication calls"
  },
  "host": "localhost:4000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "authorization",
      "authorizationUrl": "http://localhost:4000/oauth/authorize",
      "scopes": {
        "openid": "openid scope for client"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/oauth/authorize": {
      "get": {
        "description": "",
        "responses": {
          "302": {
            "description": "Redirect user to Keycloak authorization page"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "resource": {
                  "example": "any"
                },
                "scopes": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user has access to resource"
          },
          "403": {
            "description": "user has no access to resource"
          }
        }
      }
    },
    "/v1/oauth/token": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token exchanged successfully"
          },
          "400": {
            "description": "Invalid code sent in request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "admin"
        },
        "password": {
          "type": "string",
          "example": "admin"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "authenticationResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "RedirectResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 302
        },
        "message": {
          "type": "string",
          "example": "Redirected"
        }
      }
    },
    "errorResponse.400": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "The request was malformed or invalid. Please check the request parameters."
        }
      }
    },
    "errorResponse.401": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Authentication failed or user lacks proper authorization."
        }
      }
    },
    "errorResponse.403": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "You do not have permission to access this resource."
        }
      }
    },
    "errorResponse.404": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "The requested resource could not be found on the server."
        }
      }
    },
    "errorResponse.500": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "An unexpected error occurred on the server. Please try again later."
        }
      }
    }
  }
}